import java.io.*
import java.math.*
import java.security.*
import java.text.*
import java.util.*
import java.util.concurrent.*
import java.util.function.*
import java.util.regex.*
import java.util.stream.*
import kotlin.collections.*
import kotlin.comparisons.*
import kotlin.io.*
import kotlin.jvm.*
import kotlin.jvm.functions.*
import kotlin.jvm.internal.*
import kotlin.ranges.*
import kotlin.sequences.*
import kotlin.text.*

// Complete the permutationEquation function below.
fun permutationEquation(p: Array<Int>): Array<Int> {
    var hashMap: HashMap<Int,Int> = HashMap<Int,Int>();
    var q :Array<Int> = Array<Int>(p.size, init= {i :Int -> 0})
    
    for(i in p.indices) {
        hashMap.put(p[i], i+1);
    }
    
     for (i in 1..p.size) {
       q[i-1] = hashMap.get(hashMap.get(i)!!)!!
     }
    
    return q;

}

fun main(args: Array<String>) {
    val scan = Scanner(System.`in`)

    val n = scan.nextLine().trim().toInt()

    val p = scan.nextLine().split(" ").map{ it.trim().toInt() }.toTypedArray()

    val result = permutationEquation(p)

    println(result.joinToString("\n"))
}
